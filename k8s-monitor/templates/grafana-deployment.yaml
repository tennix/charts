apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "grafana.fullname" . }}
  labels:
    app: {{ template "grafana.name" . }}
    component: grafana
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "grafana.name" . }}
      component: grafana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "grafana.name" . }}
        component: grafana
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.grafana.nodeSelector }}
      nodeSelector:
        {{- with .Values.grafana.nodeSelector }}
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ template "grafana.fullname" . }}
      {{- end }}
      containers:
      - image: {{ .Values.grafana.image }}
        name: grafana
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "grafana.fullname" . }}
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "grafana.fullname" . }}
              key: admin-user
        {{- if .Values.grafana.plugins }}
        - name: GF_INSTALL_PLUGINS
          valueFrom:
            configMapKeyRef:
              name: {{ template "grafana.fullname" . }}
              key: plugins
        {{- end }}
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        {{- if .Values.localtime }}
        - mountPath: "/etc/localtime"
          name: localtime
        {{- end }}
        - mountPath: "/var/lib/grafana"
          name: data
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10
          periodSeconds: 10
        resources:
{{ toYaml .Values.grafana.resources | indent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "grafana.fullname" . }}
      - name: data
        {{- if .Values.grafana.localPersistentVolume }}
        persistentVolumeClaim:
          claimName: {{ template "grafana.fullname" . }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.localtime }}
      - name: localtime
        hostPath:
          path: /etc/localtime
      {{- end }}
